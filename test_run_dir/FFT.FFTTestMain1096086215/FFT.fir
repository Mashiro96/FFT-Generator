;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit FFT : 
  module ComplexAdd : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexAdd_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexAdd_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexAdd_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexAdd_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexSub : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ComplexSub_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ComplexSub_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ComplexTran : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    io.out.re <= io.in.im @[Modules.scala 48:13]
    node _T = sub(asFixedPoint(UInt<1>("h00"), 0), io.in.re) @[Modules.scala 49:16]
    node _T_1 = tail(_T, 1) @[Modules.scala 49:16]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 49:16]
    io.out.im <= _T_2 @[Modules.scala 49:13]
    
  module ComplexAdd_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = add(io.op1.re, io.op2.re) @[Modules.scala 19:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 19:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 19:26]
    io.res.re <= _T_2 @[Modules.scala 19:13]
    node _T_3 = add(io.op1.im, io.op2.im) @[Modules.scala 20:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 20:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 20:26]
    io.res.im <= _T_5 @[Modules.scala 20:13]
    
  module ComplexSub_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ComplexSub_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ComplexTran_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    io.out.re <= io.in.im @[Modules.scala 48:13]
    node _T = sub(asFixedPoint(UInt<1>("h00"), 0), io.in.re) @[Modules.scala 49:16]
    node _T_1 = tail(_T, 1) @[Modules.scala 49:16]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 49:16]
    io.out.im <= _T_2 @[Modules.scala 49:13]
    
  module ComplexSub_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip op1 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip op2 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, res : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}}
    
    node _T = sub(io.op1.re, io.op2.re) @[Modules.scala 32:26]
    node _T_1 = tail(_T, 1) @[Modules.scala 32:26]
    node _T_2 = asFixedPoint(_T_1, 16) @[Modules.scala 32:26]
    io.res.re <= _T_2 @[Modules.scala 32:13]
    node _T_3 = sub(io.op1.im, io.op2.im) @[Modules.scala 33:26]
    node _T_4 = tail(_T_3, 1) @[Modules.scala 33:26]
    node _T_5 = asFixedPoint(_T_4, 16) @[Modules.scala 33:26]
    io.res.im <= _T_5 @[Modules.scala 33:13]
    
  module ButterflyAdd : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4]}
    
    inst ComplexAdd of ComplexAdd @[Modules.scala 24:22]
    ComplexAdd.clock <= clock
    ComplexAdd.reset <= reset
    ComplexAdd.io.op1.im <= io.in[0].im @[Modules.scala 25:17]
    ComplexAdd.io.op1.re <= io.in[0].re @[Modules.scala 25:17]
    ComplexAdd.io.op2.im <= io.in[2].im @[Modules.scala 26:17]
    ComplexAdd.io.op2.re <= io.in[2].re @[Modules.scala 26:17]
    inst ComplexAdd_1 of ComplexAdd_1 @[Modules.scala 24:22]
    ComplexAdd_1.clock <= clock
    ComplexAdd_1.reset <= reset
    ComplexAdd_1.io.op1.im <= io.in[1].im @[Modules.scala 25:17]
    ComplexAdd_1.io.op1.re <= io.in[1].re @[Modules.scala 25:17]
    ComplexAdd_1.io.op2.im <= io.in[3].im @[Modules.scala 26:17]
    ComplexAdd_1.io.op2.re <= io.in[3].re @[Modules.scala 26:17]
    inst ComplexAdd_2 of ComplexAdd_2 @[Modules.scala 24:22]
    ComplexAdd_2.clock <= clock
    ComplexAdd_2.reset <= reset
    ComplexAdd_2.io.op1.im <= ComplexAdd.io.res.im @[Modules.scala 25:17]
    ComplexAdd_2.io.op1.re <= ComplexAdd.io.res.re @[Modules.scala 25:17]
    ComplexAdd_2.io.op2.im <= ComplexAdd_1.io.res.im @[Modules.scala 26:17]
    ComplexAdd_2.io.op2.re <= ComplexAdd_1.io.res.re @[Modules.scala 26:17]
    io.out[0].im <= ComplexAdd_2.io.res.im @[Modules.scala 88:15]
    io.out[0].re <= ComplexAdd_2.io.res.re @[Modules.scala 88:15]
    inst ComplexAdd_3 of ComplexAdd_3 @[Modules.scala 24:22]
    ComplexAdd_3.clock <= clock
    ComplexAdd_3.reset <= reset
    ComplexAdd_3.io.op1.im <= io.in[0].im @[Modules.scala 25:17]
    ComplexAdd_3.io.op1.re <= io.in[0].re @[Modules.scala 25:17]
    ComplexAdd_3.io.op2.im <= io.in[2].im @[Modules.scala 26:17]
    ComplexAdd_3.io.op2.re <= io.in[2].re @[Modules.scala 26:17]
    inst ComplexAdd_4 of ComplexAdd_4 @[Modules.scala 24:22]
    ComplexAdd_4.clock <= clock
    ComplexAdd_4.reset <= reset
    ComplexAdd_4.io.op1.im <= io.in[1].im @[Modules.scala 25:17]
    ComplexAdd_4.io.op1.re <= io.in[1].re @[Modules.scala 25:17]
    ComplexAdd_4.io.op2.im <= io.in[3].im @[Modules.scala 26:17]
    ComplexAdd_4.io.op2.re <= io.in[3].re @[Modules.scala 26:17]
    inst ComplexSub of ComplexSub @[Modules.scala 37:22]
    ComplexSub.clock <= clock
    ComplexSub.reset <= reset
    ComplexSub.io.op1.im <= ComplexAdd_3.io.res.im @[Modules.scala 38:17]
    ComplexSub.io.op1.re <= ComplexAdd_3.io.res.re @[Modules.scala 38:17]
    ComplexSub.io.op2.im <= ComplexAdd_4.io.res.im @[Modules.scala 39:17]
    ComplexSub.io.op2.re <= ComplexAdd_4.io.res.re @[Modules.scala 39:17]
    io.out[1].im <= ComplexSub.io.res.im @[Modules.scala 89:15]
    io.out[1].re <= ComplexSub.io.res.re @[Modules.scala 89:15]
    inst ComplexSub_1 of ComplexSub_1 @[Modules.scala 37:22]
    ComplexSub_1.clock <= clock
    ComplexSub_1.reset <= reset
    ComplexSub_1.io.op1.im <= io.in[0].im @[Modules.scala 38:17]
    ComplexSub_1.io.op1.re <= io.in[0].re @[Modules.scala 38:17]
    ComplexSub_1.io.op2.im <= io.in[2].im @[Modules.scala 39:17]
    ComplexSub_1.io.op2.re <= io.in[2].re @[Modules.scala 39:17]
    inst ComplexSub_2 of ComplexSub_2 @[Modules.scala 37:22]
    ComplexSub_2.clock <= clock
    ComplexSub_2.reset <= reset
    ComplexSub_2.io.op1.im <= io.in[1].im @[Modules.scala 38:17]
    ComplexSub_2.io.op1.re <= io.in[1].re @[Modules.scala 38:17]
    ComplexSub_2.io.op2.im <= io.in[3].im @[Modules.scala 39:17]
    ComplexSub_2.io.op2.re <= io.in[3].re @[Modules.scala 39:17]
    inst ComplexTran of ComplexTran @[Modules.scala 53:22]
    ComplexTran.clock <= clock
    ComplexTran.reset <= reset
    ComplexTran.io.in.im <= ComplexSub_2.io.res.im @[Modules.scala 54:16]
    ComplexTran.io.in.re <= ComplexSub_2.io.res.re @[Modules.scala 54:16]
    inst ComplexAdd_5 of ComplexAdd_5 @[Modules.scala 24:22]
    ComplexAdd_5.clock <= clock
    ComplexAdd_5.reset <= reset
    ComplexAdd_5.io.op1.im <= ComplexSub_1.io.res.im @[Modules.scala 25:17]
    ComplexAdd_5.io.op1.re <= ComplexSub_1.io.res.re @[Modules.scala 25:17]
    ComplexAdd_5.io.op2.im <= ComplexTran.io.out.im @[Modules.scala 26:17]
    ComplexAdd_5.io.op2.re <= ComplexTran.io.out.re @[Modules.scala 26:17]
    io.out[2].im <= ComplexAdd_5.io.res.im @[Modules.scala 90:15]
    io.out[2].re <= ComplexAdd_5.io.res.re @[Modules.scala 90:15]
    inst ComplexSub_3 of ComplexSub_3 @[Modules.scala 37:22]
    ComplexSub_3.clock <= clock
    ComplexSub_3.reset <= reset
    ComplexSub_3.io.op1.im <= io.in[0].im @[Modules.scala 38:17]
    ComplexSub_3.io.op1.re <= io.in[0].re @[Modules.scala 38:17]
    ComplexSub_3.io.op2.im <= io.in[2].im @[Modules.scala 39:17]
    ComplexSub_3.io.op2.re <= io.in[2].re @[Modules.scala 39:17]
    inst ComplexSub_4 of ComplexSub_4 @[Modules.scala 37:22]
    ComplexSub_4.clock <= clock
    ComplexSub_4.reset <= reset
    ComplexSub_4.io.op1.im <= io.in[1].im @[Modules.scala 38:17]
    ComplexSub_4.io.op1.re <= io.in[1].re @[Modules.scala 38:17]
    ComplexSub_4.io.op2.im <= io.in[3].im @[Modules.scala 39:17]
    ComplexSub_4.io.op2.re <= io.in[3].re @[Modules.scala 39:17]
    inst ComplexTran_1 of ComplexTran_1 @[Modules.scala 53:22]
    ComplexTran_1.clock <= clock
    ComplexTran_1.reset <= reset
    ComplexTran_1.io.in.im <= ComplexSub_4.io.res.im @[Modules.scala 54:16]
    ComplexTran_1.io.in.re <= ComplexSub_4.io.res.re @[Modules.scala 54:16]
    inst ComplexSub_5 of ComplexSub_5 @[Modules.scala 37:22]
    ComplexSub_5.clock <= clock
    ComplexSub_5.reset <= reset
    ComplexSub_5.io.op1.im <= ComplexSub_3.io.res.im @[Modules.scala 38:17]
    ComplexSub_5.io.op1.re <= ComplexSub_3.io.res.re @[Modules.scala 38:17]
    ComplexSub_5.io.op2.im <= ComplexTran_1.io.out.im @[Modules.scala 39:17]
    ComplexSub_5.io.op2.re <= ComplexTran_1.io.out.re @[Modules.scala 39:17]
    io.out[3].im <= ComplexSub_5.io.res.im @[Modules.scala 91:15]
    io.out[3].re <= ComplexSub_5.io.res.re @[Modules.scala 91:15]
    
  module Switch : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], flip sel : UInt<2>}
    
    wire _T : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_1 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_2 : UInt<64>
    _T_2 <= _T_1
    node _T_3 = bits(_T_2, 31, 0) @[Modules.scala 139:71]
    node _T_4 = asFixedPoint(_T_3, 16) @[Modules.scala 139:71]
    _T.im <= _T_4 @[Modules.scala 139:71]
    node _T_5 = bits(_T_2, 63, 32) @[Modules.scala 139:71]
    node _T_6 = asFixedPoint(_T_5, 16) @[Modules.scala 139:71]
    _T.re <= _T_6 @[Modules.scala 139:71]
    wire _T_7 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_8 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_9 : UInt<64>
    _T_9 <= _T_8
    node _T_10 = bits(_T_9, 31, 0) @[Modules.scala 139:71]
    node _T_11 = asFixedPoint(_T_10, 16) @[Modules.scala 139:71]
    _T_7.im <= _T_11 @[Modules.scala 139:71]
    node _T_12 = bits(_T_9, 63, 32) @[Modules.scala 139:71]
    node _T_13 = asFixedPoint(_T_12, 16) @[Modules.scala 139:71]
    _T_7.re <= _T_13 @[Modules.scala 139:71]
    wire _T_14 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_15 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_16 : UInt<64>
    _T_16 <= _T_15
    node _T_17 = bits(_T_16, 31, 0) @[Modules.scala 139:71]
    node _T_18 = asFixedPoint(_T_17, 16) @[Modules.scala 139:71]
    _T_14.im <= _T_18 @[Modules.scala 139:71]
    node _T_19 = bits(_T_16, 63, 32) @[Modules.scala 139:71]
    node _T_20 = asFixedPoint(_T_19, 16) @[Modules.scala 139:71]
    _T_14.re <= _T_20 @[Modules.scala 139:71]
    wire _T_21 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_22 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_23 : UInt<64>
    _T_23 <= _T_22
    node _T_24 = bits(_T_23, 31, 0) @[Modules.scala 139:71]
    node _T_25 = asFixedPoint(_T_24, 16) @[Modules.scala 139:71]
    _T_21.im <= _T_25 @[Modules.scala 139:71]
    node _T_26 = bits(_T_23, 63, 32) @[Modules.scala 139:71]
    node _T_27 = asFixedPoint(_T_26, 16) @[Modules.scala 139:71]
    _T_21.re <= _T_27 @[Modules.scala 139:71]
    wire swdata : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[Modules.scala 139:23]
    swdata[0].im <= _T.im @[Modules.scala 139:23]
    swdata[0].re <= _T.re @[Modules.scala 139:23]
    swdata[1].im <= _T_7.im @[Modules.scala 139:23]
    swdata[1].re <= _T_7.re @[Modules.scala 139:23]
    swdata[2].im <= _T_14.im @[Modules.scala 139:23]
    swdata[2].re <= _T_14.re @[Modules.scala 139:23]
    swdata[3].im <= _T_21.im @[Modules.scala 139:23]
    swdata[3].re <= _T_21.re @[Modules.scala 139:23]
    swdata[0].im <= io.in[0].im @[Modules.scala 140:38]
    swdata[0].re <= io.in[0].re @[Modules.scala 140:38]
    reg _T_28 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_28.im <= io.in[1].im @[Reg.scala 16:23]
      _T_28.re <= io.in[1].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_29 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_29.im <= _T_28.im @[Reg.scala 16:23]
      _T_29.re <= _T_28.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_30 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_30.im <= _T_29.im @[Reg.scala 16:23]
      _T_30.re <= _T_29.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_31 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_31.im <= _T_30.im @[Reg.scala 16:23]
      _T_31.re <= _T_30.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[1].im <= _T_31.im @[Modules.scala 140:38]
    swdata[1].re <= _T_31.re @[Modules.scala 140:38]
    reg _T_32 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_32.im <= io.in[2].im @[Reg.scala 16:23]
      _T_32.re <= io.in[2].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_33 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_33.im <= _T_32.im @[Reg.scala 16:23]
      _T_33.re <= _T_32.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_34 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_34.im <= _T_33.im @[Reg.scala 16:23]
      _T_34.re <= _T_33.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_35 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_35.im <= _T_34.im @[Reg.scala 16:23]
      _T_35.re <= _T_34.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_36 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_36.im <= _T_35.im @[Reg.scala 16:23]
      _T_36.re <= _T_35.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_37 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_37.im <= _T_36.im @[Reg.scala 16:23]
      _T_37.re <= _T_36.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_38 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_38.im <= _T_37.im @[Reg.scala 16:23]
      _T_38.re <= _T_37.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_39 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_39.im <= _T_38.im @[Reg.scala 16:23]
      _T_39.re <= _T_38.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[2].im <= _T_39.im @[Modules.scala 140:38]
    swdata[2].re <= _T_39.re @[Modules.scala 140:38]
    reg _T_40 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_40.im <= io.in[3].im @[Reg.scala 16:23]
      _T_40.re <= io.in[3].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_41 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_41.im <= _T_40.im @[Reg.scala 16:23]
      _T_41.re <= _T_40.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_42 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_42.im <= _T_41.im @[Reg.scala 16:23]
      _T_42.re <= _T_41.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_43 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_43.im <= _T_42.im @[Reg.scala 16:23]
      _T_43.re <= _T_42.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_44 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_44.im <= _T_43.im @[Reg.scala 16:23]
      _T_44.re <= _T_43.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_45 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_45.im <= _T_44.im @[Reg.scala 16:23]
      _T_45.re <= _T_44.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_46 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_46.im <= _T_45.im @[Reg.scala 16:23]
      _T_46.re <= _T_45.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_47 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_47.im <= _T_46.im @[Reg.scala 16:23]
      _T_47.re <= _T_46.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_48 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_48.im <= _T_47.im @[Reg.scala 16:23]
      _T_48.re <= _T_47.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_49 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_49.im <= _T_48.im @[Reg.scala 16:23]
      _T_49.re <= _T_48.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_50 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_50.im <= _T_49.im @[Reg.scala 16:23]
      _T_50.re <= _T_49.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_51 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_51.im <= _T_50.im @[Reg.scala 16:23]
      _T_51.re <= _T_50.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[3].im <= _T_51.im @[Modules.scala 140:38]
    swdata[3].re <= _T_51.re @[Modules.scala 140:38]
    wire _T_52 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_53 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_54 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_55 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_56 = mux(_T_55, swdata[2], swdata[3]) @[Modules.scala 129:64]
    node _T_57 = mux(_T_54, swdata[1], _T_56) @[Modules.scala 129:40]
    node _T_58 = mux(_T_53, swdata[0], _T_57) @[Modules.scala 129:16]
    _T_52.im <= _T_58.im @[Modules.scala 129:10]
    _T_52.re <= _T_58.re @[Modules.scala 129:10]
    reg _T_59 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_59.im <= _T_52.im @[Reg.scala 16:23]
      _T_59.re <= _T_52.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_60 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_60.im <= _T_59.im @[Reg.scala 16:23]
      _T_60.re <= _T_59.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_61 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_61.im <= _T_60.im @[Reg.scala 16:23]
      _T_61.re <= _T_60.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_62 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_62.im <= _T_61.im @[Reg.scala 16:23]
      _T_62.re <= _T_61.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_63 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_63.im <= _T_62.im @[Reg.scala 16:23]
      _T_63.re <= _T_62.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_64 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_64.im <= _T_63.im @[Reg.scala 16:23]
      _T_64.re <= _T_63.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_65 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_65.im <= _T_64.im @[Reg.scala 16:23]
      _T_65.re <= _T_64.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_66 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_66.im <= _T_65.im @[Reg.scala 16:23]
      _T_66.re <= _T_65.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_67 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_67.im <= _T_66.im @[Reg.scala 16:23]
      _T_67.re <= _T_66.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_68 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_68.im <= _T_67.im @[Reg.scala 16:23]
      _T_68.re <= _T_67.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_69 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_69.im <= _T_68.im @[Reg.scala 16:23]
      _T_69.re <= _T_68.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_70 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_70.im <= _T_69.im @[Reg.scala 16:23]
      _T_70.re <= _T_69.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[0].im <= _T_70.im @[Modules.scala 145:15]
    io.out[0].re <= _T_70.re @[Modules.scala 145:15]
    wire _T_71 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_72 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_73 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_74 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_75 = mux(_T_74, swdata[1], swdata[2]) @[Modules.scala 129:64]
    node _T_76 = mux(_T_73, swdata[0], _T_75) @[Modules.scala 129:40]
    node _T_77 = mux(_T_72, swdata[3], _T_76) @[Modules.scala 129:16]
    _T_71.im <= _T_77.im @[Modules.scala 129:10]
    _T_71.re <= _T_77.re @[Modules.scala 129:10]
    reg _T_78 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_78.im <= _T_71.im @[Reg.scala 16:23]
      _T_78.re <= _T_71.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_79 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_79.im <= _T_78.im @[Reg.scala 16:23]
      _T_79.re <= _T_78.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_80 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_80.im <= _T_79.im @[Reg.scala 16:23]
      _T_80.re <= _T_79.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_81 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_81.im <= _T_80.im @[Reg.scala 16:23]
      _T_81.re <= _T_80.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_82 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_82.im <= _T_81.im @[Reg.scala 16:23]
      _T_82.re <= _T_81.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_83 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_83.im <= _T_82.im @[Reg.scala 16:23]
      _T_83.re <= _T_82.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_84 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_84.im <= _T_83.im @[Reg.scala 16:23]
      _T_84.re <= _T_83.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_85 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_85.im <= _T_84.im @[Reg.scala 16:23]
      _T_85.re <= _T_84.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[1].im <= _T_85.im @[Modules.scala 146:15]
    io.out[1].re <= _T_85.re @[Modules.scala 146:15]
    wire _T_86 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_87 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_88 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_89 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_90 = mux(_T_89, swdata[0], swdata[1]) @[Modules.scala 129:64]
    node _T_91 = mux(_T_88, swdata[3], _T_90) @[Modules.scala 129:40]
    node _T_92 = mux(_T_87, swdata[2], _T_91) @[Modules.scala 129:16]
    _T_86.im <= _T_92.im @[Modules.scala 129:10]
    _T_86.re <= _T_92.re @[Modules.scala 129:10]
    reg _T_93 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_93.im <= _T_86.im @[Reg.scala 16:23]
      _T_93.re <= _T_86.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_94 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_94.im <= _T_93.im @[Reg.scala 16:23]
      _T_94.re <= _T_93.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_95 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_95.im <= _T_94.im @[Reg.scala 16:23]
      _T_95.re <= _T_94.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_96 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_96.im <= _T_95.im @[Reg.scala 16:23]
      _T_96.re <= _T_95.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[2].im <= _T_96.im @[Modules.scala 147:15]
    io.out[2].re <= _T_96.re @[Modules.scala 147:15]
    wire _T_97 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_98 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_99 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_100 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_101 = mux(_T_100, swdata[3], swdata[0]) @[Modules.scala 129:64]
    node _T_102 = mux(_T_99, swdata[2], _T_101) @[Modules.scala 129:40]
    node _T_103 = mux(_T_98, swdata[1], _T_102) @[Modules.scala 129:16]
    _T_97.im <= _T_103.im @[Modules.scala 129:10]
    _T_97.re <= _T_103.re @[Modules.scala 129:10]
    io.out[3].im <= _T_97.im @[Modules.scala 148:15]
    io.out[3].re <= _T_97.re @[Modules.scala 148:15]
    
  module Switch_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], flip sel : UInt<2>}
    
    wire _T : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_1 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_2 : UInt<64>
    _T_2 <= _T_1
    node _T_3 = bits(_T_2, 31, 0) @[Modules.scala 139:71]
    node _T_4 = asFixedPoint(_T_3, 16) @[Modules.scala 139:71]
    _T.im <= _T_4 @[Modules.scala 139:71]
    node _T_5 = bits(_T_2, 63, 32) @[Modules.scala 139:71]
    node _T_6 = asFixedPoint(_T_5, 16) @[Modules.scala 139:71]
    _T.re <= _T_6 @[Modules.scala 139:71]
    wire _T_7 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_8 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_9 : UInt<64>
    _T_9 <= _T_8
    node _T_10 = bits(_T_9, 31, 0) @[Modules.scala 139:71]
    node _T_11 = asFixedPoint(_T_10, 16) @[Modules.scala 139:71]
    _T_7.im <= _T_11 @[Modules.scala 139:71]
    node _T_12 = bits(_T_9, 63, 32) @[Modules.scala 139:71]
    node _T_13 = asFixedPoint(_T_12, 16) @[Modules.scala 139:71]
    _T_7.re <= _T_13 @[Modules.scala 139:71]
    wire _T_14 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_15 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_16 : UInt<64>
    _T_16 <= _T_15
    node _T_17 = bits(_T_16, 31, 0) @[Modules.scala 139:71]
    node _T_18 = asFixedPoint(_T_17, 16) @[Modules.scala 139:71]
    _T_14.im <= _T_18 @[Modules.scala 139:71]
    node _T_19 = bits(_T_16, 63, 32) @[Modules.scala 139:71]
    node _T_20 = asFixedPoint(_T_19, 16) @[Modules.scala 139:71]
    _T_14.re <= _T_20 @[Modules.scala 139:71]
    wire _T_21 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 139:71]
    node _T_22 = asUInt(asSInt(UInt<64>("h00"))) @[Modules.scala 139:71]
    wire _T_23 : UInt<64>
    _T_23 <= _T_22
    node _T_24 = bits(_T_23, 31, 0) @[Modules.scala 139:71]
    node _T_25 = asFixedPoint(_T_24, 16) @[Modules.scala 139:71]
    _T_21.im <= _T_25 @[Modules.scala 139:71]
    node _T_26 = bits(_T_23, 63, 32) @[Modules.scala 139:71]
    node _T_27 = asFixedPoint(_T_26, 16) @[Modules.scala 139:71]
    _T_21.re <= _T_27 @[Modules.scala 139:71]
    wire swdata : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[Modules.scala 139:23]
    swdata[0].im <= _T.im @[Modules.scala 139:23]
    swdata[0].re <= _T.re @[Modules.scala 139:23]
    swdata[1].im <= _T_7.im @[Modules.scala 139:23]
    swdata[1].re <= _T_7.re @[Modules.scala 139:23]
    swdata[2].im <= _T_14.im @[Modules.scala 139:23]
    swdata[2].re <= _T_14.re @[Modules.scala 139:23]
    swdata[3].im <= _T_21.im @[Modules.scala 139:23]
    swdata[3].re <= _T_21.re @[Modules.scala 139:23]
    swdata[0].im <= io.in[0].im @[Modules.scala 140:38]
    swdata[0].re <= io.in[0].re @[Modules.scala 140:38]
    reg _T_28 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_28.im <= io.in[1].im @[Reg.scala 16:23]
      _T_28.re <= io.in[1].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[1].im <= _T_28.im @[Modules.scala 140:38]
    swdata[1].re <= _T_28.re @[Modules.scala 140:38]
    reg _T_29 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_29.im <= io.in[2].im @[Reg.scala 16:23]
      _T_29.re <= io.in[2].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_30 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_30.im <= _T_29.im @[Reg.scala 16:23]
      _T_30.re <= _T_29.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[2].im <= _T_30.im @[Modules.scala 140:38]
    swdata[2].re <= _T_30.re @[Modules.scala 140:38]
    reg _T_31 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_31.im <= io.in[3].im @[Reg.scala 16:23]
      _T_31.re <= io.in[3].re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_32 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_32.im <= _T_31.im @[Reg.scala 16:23]
      _T_32.re <= _T_31.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_33 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_33.im <= _T_32.im @[Reg.scala 16:23]
      _T_33.re <= _T_32.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    swdata[3].im <= _T_33.im @[Modules.scala 140:38]
    swdata[3].re <= _T_33.re @[Modules.scala 140:38]
    wire _T_34 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_35 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_36 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_37 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_38 = mux(_T_37, swdata[2], swdata[3]) @[Modules.scala 129:64]
    node _T_39 = mux(_T_36, swdata[1], _T_38) @[Modules.scala 129:40]
    node _T_40 = mux(_T_35, swdata[0], _T_39) @[Modules.scala 129:16]
    _T_34.im <= _T_40.im @[Modules.scala 129:10]
    _T_34.re <= _T_40.re @[Modules.scala 129:10]
    reg _T_41 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_41.im <= _T_34.im @[Reg.scala 16:23]
      _T_41.re <= _T_34.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_42 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_42.im <= _T_41.im @[Reg.scala 16:23]
      _T_42.re <= _T_41.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_43 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_43.im <= _T_42.im @[Reg.scala 16:23]
      _T_43.re <= _T_42.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[0].im <= _T_43.im @[Modules.scala 145:15]
    io.out[0].re <= _T_43.re @[Modules.scala 145:15]
    wire _T_44 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_45 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_46 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_47 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_48 = mux(_T_47, swdata[1], swdata[2]) @[Modules.scala 129:64]
    node _T_49 = mux(_T_46, swdata[0], _T_48) @[Modules.scala 129:40]
    node _T_50 = mux(_T_45, swdata[3], _T_49) @[Modules.scala 129:16]
    _T_44.im <= _T_50.im @[Modules.scala 129:10]
    _T_44.re <= _T_50.re @[Modules.scala 129:10]
    reg _T_51 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_51.im <= _T_44.im @[Reg.scala 16:23]
      _T_51.re <= _T_44.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_52 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_52.im <= _T_51.im @[Reg.scala 16:23]
      _T_52.re <= _T_51.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[1].im <= _T_52.im @[Modules.scala 146:15]
    io.out[1].re <= _T_52.re @[Modules.scala 146:15]
    wire _T_53 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_54 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_55 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_56 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_57 = mux(_T_56, swdata[0], swdata[1]) @[Modules.scala 129:64]
    node _T_58 = mux(_T_55, swdata[3], _T_57) @[Modules.scala 129:40]
    node _T_59 = mux(_T_54, swdata[2], _T_58) @[Modules.scala 129:16]
    _T_53.im <= _T_59.im @[Modules.scala 129:10]
    _T_53.re <= _T_59.re @[Modules.scala 129:10]
    reg _T_60 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_60.im <= _T_53.im @[Reg.scala 16:23]
      _T_60.re <= _T_53.re @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out[2].im <= _T_60.im @[Modules.scala 147:15]
    io.out[2].re <= _T_60.re @[Modules.scala 147:15]
    wire _T_61 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[Modules.scala 128:20]
    node _T_62 = eq(io.sel, UInt<1>("h00")) @[Modules.scala 129:22]
    node _T_63 = eq(io.sel, UInt<1>("h01")) @[Modules.scala 129:46]
    node _T_64 = eq(io.sel, UInt<2>("h02")) @[Modules.scala 129:70]
    node _T_65 = mux(_T_64, swdata[3], swdata[0]) @[Modules.scala 129:64]
    node _T_66 = mux(_T_63, swdata[2], _T_65) @[Modules.scala 129:40]
    node _T_67 = mux(_T_62, swdata[1], _T_66) @[Modules.scala 129:16]
    _T_61.im <= _T_67.im @[Modules.scala 129:10]
    _T_61.re <= _T_67.re @[Modules.scala 129:10]
    io.out[3].im <= _T_61.im @[Modules.scala 148:15]
    io.out[3].re <= _T_61.re @[Modules.scala 148:15]
    
  module FFT : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dIn : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], dOut : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], flip din_valid : UInt<1>, dout_valid : UInt<1>, busy : UInt<1>}
    
    reg cnt_0 : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[FFT.scala 41:46]
    node busy = neq(cnt_0, UInt<1>("h00")) @[FFT.scala 45:22]
    node _T = or(io.din_valid, busy) @[FFT.scala 46:21]
    when _T : @[FFT.scala 46:30]
      node _T_1 = eq(cnt_0, UInt<5>("h01f")) @[FFT.scala 47:26]
      node _T_2 = add(cnt_0, UInt<1>("h01")) @[FFT.scala 47:87]
      node _T_3 = tail(_T_2, 1) @[FFT.scala 47:87]
      node _T_4 = mux(_T_1, UInt<1>("h00"), _T_3) @[FFT.scala 47:18]
      cnt_0 <= _T_4 @[FFT.scala 47:12]
      skip @[FFT.scala 46:30]
    wire _T_5 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_6 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_7 : UInt<64>
    _T_7 <= _T_6
    node _T_8 = bits(_T_7, 31, 0) @[FFT.scala 53:113]
    node _T_9 = asFixedPoint(_T_8, 16) @[FFT.scala 53:113]
    _T_5.im <= _T_9 @[FFT.scala 53:113]
    node _T_10 = bits(_T_7, 63, 32) @[FFT.scala 53:113]
    node _T_11 = asFixedPoint(_T_10, 16) @[FFT.scala 53:113]
    _T_5.re <= _T_11 @[FFT.scala 53:113]
    wire _T_12 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_13 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_14 : UInt<64>
    _T_14 <= _T_13
    node _T_15 = bits(_T_14, 31, 0) @[FFT.scala 53:113]
    node _T_16 = asFixedPoint(_T_15, 16) @[FFT.scala 53:113]
    _T_12.im <= _T_16 @[FFT.scala 53:113]
    node _T_17 = bits(_T_14, 63, 32) @[FFT.scala 53:113]
    node _T_18 = asFixedPoint(_T_17, 16) @[FFT.scala 53:113]
    _T_12.re <= _T_18 @[FFT.scala 53:113]
    wire _T_19 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_20 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_21 : UInt<64>
    _T_21 <= _T_20
    node _T_22 = bits(_T_21, 31, 0) @[FFT.scala 53:113]
    node _T_23 = asFixedPoint(_T_22, 16) @[FFT.scala 53:113]
    _T_19.im <= _T_23 @[FFT.scala 53:113]
    node _T_24 = bits(_T_21, 63, 32) @[FFT.scala 53:113]
    node _T_25 = asFixedPoint(_T_24, 16) @[FFT.scala 53:113]
    _T_19.re <= _T_25 @[FFT.scala 53:113]
    wire _T_26 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_27 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_28 : UInt<64>
    _T_28 <= _T_27
    node _T_29 = bits(_T_28, 31, 0) @[FFT.scala 53:113]
    node _T_30 = asFixedPoint(_T_29, 16) @[FFT.scala 53:113]
    _T_26.im <= _T_30 @[FFT.scala 53:113]
    node _T_31 = bits(_T_28, 63, 32) @[FFT.scala 53:113]
    node _T_32 = asFixedPoint(_T_31, 16) @[FFT.scala 53:113]
    _T_26.re <= _T_32 @[FFT.scala 53:113]
    wire data1_0_0 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 53:65]
    data1_0_0[0].im <= _T_5.im @[FFT.scala 53:65]
    data1_0_0[0].re <= _T_5.re @[FFT.scala 53:65]
    data1_0_0[1].im <= _T_12.im @[FFT.scala 53:65]
    data1_0_0[1].re <= _T_12.re @[FFT.scala 53:65]
    data1_0_0[2].im <= _T_19.im @[FFT.scala 53:65]
    data1_0_0[2].re <= _T_19.re @[FFT.scala 53:65]
    data1_0_0[3].im <= _T_26.im @[FFT.scala 53:65]
    data1_0_0[3].re <= _T_26.re @[FFT.scala 53:65]
    wire _T_33 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_34 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_35 : UInt<64>
    _T_35 <= _T_34
    node _T_36 = bits(_T_35, 31, 0) @[FFT.scala 53:113]
    node _T_37 = asFixedPoint(_T_36, 16) @[FFT.scala 53:113]
    _T_33.im <= _T_37 @[FFT.scala 53:113]
    node _T_38 = bits(_T_35, 63, 32) @[FFT.scala 53:113]
    node _T_39 = asFixedPoint(_T_38, 16) @[FFT.scala 53:113]
    _T_33.re <= _T_39 @[FFT.scala 53:113]
    wire _T_40 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_41 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_42 : UInt<64>
    _T_42 <= _T_41
    node _T_43 = bits(_T_42, 31, 0) @[FFT.scala 53:113]
    node _T_44 = asFixedPoint(_T_43, 16) @[FFT.scala 53:113]
    _T_40.im <= _T_44 @[FFT.scala 53:113]
    node _T_45 = bits(_T_42, 63, 32) @[FFT.scala 53:113]
    node _T_46 = asFixedPoint(_T_45, 16) @[FFT.scala 53:113]
    _T_40.re <= _T_46 @[FFT.scala 53:113]
    wire _T_47 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_48 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_49 : UInt<64>
    _T_49 <= _T_48
    node _T_50 = bits(_T_49, 31, 0) @[FFT.scala 53:113]
    node _T_51 = asFixedPoint(_T_50, 16) @[FFT.scala 53:113]
    _T_47.im <= _T_51 @[FFT.scala 53:113]
    node _T_52 = bits(_T_49, 63, 32) @[FFT.scala 53:113]
    node _T_53 = asFixedPoint(_T_52, 16) @[FFT.scala 53:113]
    _T_47.re <= _T_53 @[FFT.scala 53:113]
    wire _T_54 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_55 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_56 : UInt<64>
    _T_56 <= _T_55
    node _T_57 = bits(_T_56, 31, 0) @[FFT.scala 53:113]
    node _T_58 = asFixedPoint(_T_57, 16) @[FFT.scala 53:113]
    _T_54.im <= _T_58 @[FFT.scala 53:113]
    node _T_59 = bits(_T_56, 63, 32) @[FFT.scala 53:113]
    node _T_60 = asFixedPoint(_T_59, 16) @[FFT.scala 53:113]
    _T_54.re <= _T_60 @[FFT.scala 53:113]
    wire data1_1_0 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 53:65]
    data1_1_0[0].im <= _T_33.im @[FFT.scala 53:65]
    data1_1_0[0].re <= _T_33.re @[FFT.scala 53:65]
    data1_1_0[1].im <= _T_40.im @[FFT.scala 53:65]
    data1_1_0[1].re <= _T_40.re @[FFT.scala 53:65]
    data1_1_0[2].im <= _T_47.im @[FFT.scala 53:65]
    data1_1_0[2].re <= _T_47.re @[FFT.scala 53:65]
    data1_1_0[3].im <= _T_54.im @[FFT.scala 53:65]
    data1_1_0[3].re <= _T_54.re @[FFT.scala 53:65]
    wire _T_61 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_62 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_63 : UInt<64>
    _T_63 <= _T_62
    node _T_64 = bits(_T_63, 31, 0) @[FFT.scala 53:113]
    node _T_65 = asFixedPoint(_T_64, 16) @[FFT.scala 53:113]
    _T_61.im <= _T_65 @[FFT.scala 53:113]
    node _T_66 = bits(_T_63, 63, 32) @[FFT.scala 53:113]
    node _T_67 = asFixedPoint(_T_66, 16) @[FFT.scala 53:113]
    _T_61.re <= _T_67 @[FFT.scala 53:113]
    wire _T_68 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_69 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_70 : UInt<64>
    _T_70 <= _T_69
    node _T_71 = bits(_T_70, 31, 0) @[FFT.scala 53:113]
    node _T_72 = asFixedPoint(_T_71, 16) @[FFT.scala 53:113]
    _T_68.im <= _T_72 @[FFT.scala 53:113]
    node _T_73 = bits(_T_70, 63, 32) @[FFT.scala 53:113]
    node _T_74 = asFixedPoint(_T_73, 16) @[FFT.scala 53:113]
    _T_68.re <= _T_74 @[FFT.scala 53:113]
    wire _T_75 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_76 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_77 : UInt<64>
    _T_77 <= _T_76
    node _T_78 = bits(_T_77, 31, 0) @[FFT.scala 53:113]
    node _T_79 = asFixedPoint(_T_78, 16) @[FFT.scala 53:113]
    _T_75.im <= _T_79 @[FFT.scala 53:113]
    node _T_80 = bits(_T_77, 63, 32) @[FFT.scala 53:113]
    node _T_81 = asFixedPoint(_T_80, 16) @[FFT.scala 53:113]
    _T_75.re <= _T_81 @[FFT.scala 53:113]
    wire _T_82 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 53:113]
    node _T_83 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 53:113]
    wire _T_84 : UInt<64>
    _T_84 <= _T_83
    node _T_85 = bits(_T_84, 31, 0) @[FFT.scala 53:113]
    node _T_86 = asFixedPoint(_T_85, 16) @[FFT.scala 53:113]
    _T_82.im <= _T_86 @[FFT.scala 53:113]
    node _T_87 = bits(_T_84, 63, 32) @[FFT.scala 53:113]
    node _T_88 = asFixedPoint(_T_87, 16) @[FFT.scala 53:113]
    _T_82.re <= _T_88 @[FFT.scala 53:113]
    wire data1_2_0 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 53:65]
    data1_2_0[0].im <= _T_61.im @[FFT.scala 53:65]
    data1_2_0[0].re <= _T_61.re @[FFT.scala 53:65]
    data1_2_0[1].im <= _T_68.im @[FFT.scala 53:65]
    data1_2_0[1].re <= _T_68.re @[FFT.scala 53:65]
    data1_2_0[2].im <= _T_75.im @[FFT.scala 53:65]
    data1_2_0[2].re <= _T_75.re @[FFT.scala 53:65]
    data1_2_0[3].im <= _T_82.im @[FFT.scala 53:65]
    data1_2_0[3].re <= _T_82.re @[FFT.scala 53:65]
    wire _T_89 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_90 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_91 : UInt<64>
    _T_91 <= _T_90
    node _T_92 = bits(_T_91, 31, 0) @[FFT.scala 54:117]
    node _T_93 = asFixedPoint(_T_92, 16) @[FFT.scala 54:117]
    _T_89.im <= _T_93 @[FFT.scala 54:117]
    node _T_94 = bits(_T_91, 63, 32) @[FFT.scala 54:117]
    node _T_95 = asFixedPoint(_T_94, 16) @[FFT.scala 54:117]
    _T_89.re <= _T_95 @[FFT.scala 54:117]
    wire _T_96 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_97 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_98 : UInt<64>
    _T_98 <= _T_97
    node _T_99 = bits(_T_98, 31, 0) @[FFT.scala 54:117]
    node _T_100 = asFixedPoint(_T_99, 16) @[FFT.scala 54:117]
    _T_96.im <= _T_100 @[FFT.scala 54:117]
    node _T_101 = bits(_T_98, 63, 32) @[FFT.scala 54:117]
    node _T_102 = asFixedPoint(_T_101, 16) @[FFT.scala 54:117]
    _T_96.re <= _T_102 @[FFT.scala 54:117]
    wire _T_103 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_104 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_105 : UInt<64>
    _T_105 <= _T_104
    node _T_106 = bits(_T_105, 31, 0) @[FFT.scala 54:117]
    node _T_107 = asFixedPoint(_T_106, 16) @[FFT.scala 54:117]
    _T_103.im <= _T_107 @[FFT.scala 54:117]
    node _T_108 = bits(_T_105, 63, 32) @[FFT.scala 54:117]
    node _T_109 = asFixedPoint(_T_108, 16) @[FFT.scala 54:117]
    _T_103.re <= _T_109 @[FFT.scala 54:117]
    wire _T_110 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_111 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_112 : UInt<64>
    _T_112 <= _T_111
    node _T_113 = bits(_T_112, 31, 0) @[FFT.scala 54:117]
    node _T_114 = asFixedPoint(_T_113, 16) @[FFT.scala 54:117]
    _T_110.im <= _T_114 @[FFT.scala 54:117]
    node _T_115 = bits(_T_112, 63, 32) @[FFT.scala 54:117]
    node _T_116 = asFixedPoint(_T_115, 16) @[FFT.scala 54:117]
    _T_110.re <= _T_116 @[FFT.scala 54:117]
    wire data2_0_0 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 54:69]
    data2_0_0[0].im <= _T_89.im @[FFT.scala 54:69]
    data2_0_0[0].re <= _T_89.re @[FFT.scala 54:69]
    data2_0_0[1].im <= _T_96.im @[FFT.scala 54:69]
    data2_0_0[1].re <= _T_96.re @[FFT.scala 54:69]
    data2_0_0[2].im <= _T_103.im @[FFT.scala 54:69]
    data2_0_0[2].re <= _T_103.re @[FFT.scala 54:69]
    data2_0_0[3].im <= _T_110.im @[FFT.scala 54:69]
    data2_0_0[3].re <= _T_110.re @[FFT.scala 54:69]
    wire _T_117 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_118 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_119 : UInt<64>
    _T_119 <= _T_118
    node _T_120 = bits(_T_119, 31, 0) @[FFT.scala 54:117]
    node _T_121 = asFixedPoint(_T_120, 16) @[FFT.scala 54:117]
    _T_117.im <= _T_121 @[FFT.scala 54:117]
    node _T_122 = bits(_T_119, 63, 32) @[FFT.scala 54:117]
    node _T_123 = asFixedPoint(_T_122, 16) @[FFT.scala 54:117]
    _T_117.re <= _T_123 @[FFT.scala 54:117]
    wire _T_124 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_125 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_126 : UInt<64>
    _T_126 <= _T_125
    node _T_127 = bits(_T_126, 31, 0) @[FFT.scala 54:117]
    node _T_128 = asFixedPoint(_T_127, 16) @[FFT.scala 54:117]
    _T_124.im <= _T_128 @[FFT.scala 54:117]
    node _T_129 = bits(_T_126, 63, 32) @[FFT.scala 54:117]
    node _T_130 = asFixedPoint(_T_129, 16) @[FFT.scala 54:117]
    _T_124.re <= _T_130 @[FFT.scala 54:117]
    wire _T_131 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_132 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_133 : UInt<64>
    _T_133 <= _T_132
    node _T_134 = bits(_T_133, 31, 0) @[FFT.scala 54:117]
    node _T_135 = asFixedPoint(_T_134, 16) @[FFT.scala 54:117]
    _T_131.im <= _T_135 @[FFT.scala 54:117]
    node _T_136 = bits(_T_133, 63, 32) @[FFT.scala 54:117]
    node _T_137 = asFixedPoint(_T_136, 16) @[FFT.scala 54:117]
    _T_131.re <= _T_137 @[FFT.scala 54:117]
    wire _T_138 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 54:117]
    node _T_139 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 54:117]
    wire _T_140 : UInt<64>
    _T_140 <= _T_139
    node _T_141 = bits(_T_140, 31, 0) @[FFT.scala 54:117]
    node _T_142 = asFixedPoint(_T_141, 16) @[FFT.scala 54:117]
    _T_138.im <= _T_142 @[FFT.scala 54:117]
    node _T_143 = bits(_T_140, 63, 32) @[FFT.scala 54:117]
    node _T_144 = asFixedPoint(_T_143, 16) @[FFT.scala 54:117]
    _T_138.re <= _T_144 @[FFT.scala 54:117]
    wire data2_1_0 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 54:69]
    data2_1_0[0].im <= _T_117.im @[FFT.scala 54:69]
    data2_1_0[0].re <= _T_117.re @[FFT.scala 54:69]
    data2_1_0[1].im <= _T_124.im @[FFT.scala 54:69]
    data2_1_0[1].re <= _T_124.re @[FFT.scala 54:69]
    data2_1_0[2].im <= _T_131.im @[FFT.scala 54:69]
    data2_1_0[2].re <= _T_131.re @[FFT.scala 54:69]
    data2_1_0[3].im <= _T_138.im @[FFT.scala 54:69]
    data2_1_0[3].re <= _T_138.re @[FFT.scala 54:69]
    wire _T_145 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 55:86]
    node _T_146 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 55:86]
    wire _T_147 : UInt<64>
    _T_147 <= _T_146
    node _T_148 = bits(_T_147, 31, 0) @[FFT.scala 55:86]
    node _T_149 = asFixedPoint(_T_148, 16) @[FFT.scala 55:86]
    _T_145.im <= _T_149 @[FFT.scala 55:86]
    node _T_150 = bits(_T_147, 63, 32) @[FFT.scala 55:86]
    node _T_151 = asFixedPoint(_T_150, 16) @[FFT.scala 55:86]
    _T_145.re <= _T_151 @[FFT.scala 55:86]
    wire _T_152 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 55:86]
    node _T_153 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 55:86]
    wire _T_154 : UInt<64>
    _T_154 <= _T_153
    node _T_155 = bits(_T_154, 31, 0) @[FFT.scala 55:86]
    node _T_156 = asFixedPoint(_T_155, 16) @[FFT.scala 55:86]
    _T_152.im <= _T_156 @[FFT.scala 55:86]
    node _T_157 = bits(_T_154, 63, 32) @[FFT.scala 55:86]
    node _T_158 = asFixedPoint(_T_157, 16) @[FFT.scala 55:86]
    _T_152.re <= _T_158 @[FFT.scala 55:86]
    wire _T_159 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 55:86]
    node _T_160 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 55:86]
    wire _T_161 : UInt<64>
    _T_161 <= _T_160
    node _T_162 = bits(_T_161, 31, 0) @[FFT.scala 55:86]
    node _T_163 = asFixedPoint(_T_162, 16) @[FFT.scala 55:86]
    _T_159.im <= _T_163 @[FFT.scala 55:86]
    node _T_164 = bits(_T_161, 63, 32) @[FFT.scala 55:86]
    node _T_165 = asFixedPoint(_T_164, 16) @[FFT.scala 55:86]
    _T_159.re <= _T_165 @[FFT.scala 55:86]
    wire _T_166 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>} @[FFT.scala 55:86]
    node _T_167 = asUInt(asSInt(UInt<64>("h00"))) @[FFT.scala 55:86]
    wire _T_168 : UInt<64>
    _T_168 <= _T_167
    node _T_169 = bits(_T_168, 31, 0) @[FFT.scala 55:86]
    node _T_170 = asFixedPoint(_T_169, 16) @[FFT.scala 55:86]
    _T_166.im <= _T_170 @[FFT.scala 55:86]
    node _T_171 = bits(_T_168, 63, 32) @[FFT.scala 55:86]
    node _T_172 = asFixedPoint(_T_171, 16) @[FFT.scala 55:86]
    _T_166.re <= _T_172 @[FFT.scala 55:86]
    wire datao : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4] @[FFT.scala 55:22]
    datao[0].im <= _T_145.im @[FFT.scala 55:22]
    datao[0].re <= _T_145.re @[FFT.scala 55:22]
    datao[1].im <= _T_152.im @[FFT.scala 55:22]
    datao[1].re <= _T_152.re @[FFT.scala 55:22]
    datao[2].im <= _T_159.im @[FFT.scala 55:22]
    datao[2].re <= _T_159.re @[FFT.scala 55:22]
    datao[3].im <= _T_166.im @[FFT.scala 55:22]
    datao[3].re <= _T_166.re @[FFT.scala 55:22]
    node _T_173 = bits(cnt_0, 3, 0) @[FFT.scala 60:26]
    node _T_174 = bits(cnt_0, 1, 0) @[FFT.scala 60:26]
    inst ButterflyAdd of ButterflyAdd @[Modules.scala 96:22]
    ButterflyAdd.clock <= clock
    ButterflyAdd.reset <= reset
    ButterflyAdd.io.in[0].im <= data1_2_0[0].im @[Modules.scala 97:16]
    ButterflyAdd.io.in[0].re <= data1_2_0[0].re @[Modules.scala 97:16]
    ButterflyAdd.io.in[1].im <= data1_2_0[1].im @[Modules.scala 97:16]
    ButterflyAdd.io.in[1].re <= data1_2_0[1].re @[Modules.scala 97:16]
    ButterflyAdd.io.in[2].im <= data1_2_0[2].im @[Modules.scala 97:16]
    ButterflyAdd.io.in[2].re <= data1_2_0[2].re @[Modules.scala 97:16]
    ButterflyAdd.io.in[3].im <= data1_2_0[3].im @[Modules.scala 97:16]
    ButterflyAdd.io.in[3].re <= data1_2_0[3].re @[Modules.scala 97:16]
    datao[0].im <= ButterflyAdd.io.out[0].im @[FFT.scala 67:9]
    datao[0].re <= ButterflyAdd.io.out[0].re @[FFT.scala 67:9]
    datao[1].im <= ButterflyAdd.io.out[1].im @[FFT.scala 67:9]
    datao[1].re <= ButterflyAdd.io.out[1].re @[FFT.scala 67:9]
    datao[2].im <= ButterflyAdd.io.out[2].im @[FFT.scala 67:9]
    datao[2].re <= ButterflyAdd.io.out[2].re @[FFT.scala 67:9]
    datao[3].im <= ButterflyAdd.io.out[3].im @[FFT.scala 67:9]
    datao[3].re <= ButterflyAdd.io.out[3].re @[FFT.scala 67:9]
    node _T_175 = bits(cnt_0, 3, 2) @[FFT.scala 90:31]
    inst Switch of Switch @[Modules.scala 153:22]
    Switch.clock <= clock
    Switch.reset <= reset
    Switch.io.in[0].im <= data2_0_0[0].im @[Modules.scala 154:16]
    Switch.io.in[0].re <= data2_0_0[0].re @[Modules.scala 154:16]
    Switch.io.in[1].im <= data2_0_0[1].im @[Modules.scala 154:16]
    Switch.io.in[1].re <= data2_0_0[1].re @[Modules.scala 154:16]
    Switch.io.in[2].im <= data2_0_0[2].im @[Modules.scala 154:16]
    Switch.io.in[2].re <= data2_0_0[2].re @[Modules.scala 154:16]
    Switch.io.in[3].im <= data2_0_0[3].im @[Modules.scala 154:16]
    Switch.io.in[3].re <= data2_0_0[3].re @[Modules.scala 154:16]
    Switch.io.sel <= _T_175 @[Modules.scala 155:17]
    data1_1_0[0].im <= Switch.io.out[0].im @[FFT.scala 91:54]
    data1_1_0[0].re <= Switch.io.out[0].re @[FFT.scala 91:54]
    data1_1_0[1].im <= Switch.io.out[1].im @[FFT.scala 91:54]
    data1_1_0[1].re <= Switch.io.out[1].re @[FFT.scala 91:54]
    data1_1_0[2].im <= Switch.io.out[2].im @[FFT.scala 91:54]
    data1_1_0[2].re <= Switch.io.out[2].re @[FFT.scala 91:54]
    data1_1_0[3].im <= Switch.io.out[3].im @[FFT.scala 91:54]
    data1_1_0[3].re <= Switch.io.out[3].re @[FFT.scala 91:54]
    node _T_176 = bits(cnt_0, 1, 0) @[FFT.scala 90:31]
    inst Switch_1 of Switch_1 @[Modules.scala 153:22]
    Switch_1.clock <= clock
    Switch_1.reset <= reset
    Switch_1.io.in[0].im <= data2_1_0[0].im @[Modules.scala 154:16]
    Switch_1.io.in[0].re <= data2_1_0[0].re @[Modules.scala 154:16]
    Switch_1.io.in[1].im <= data2_1_0[1].im @[Modules.scala 154:16]
    Switch_1.io.in[1].re <= data2_1_0[1].re @[Modules.scala 154:16]
    Switch_1.io.in[2].im <= data2_1_0[2].im @[Modules.scala 154:16]
    Switch_1.io.in[2].re <= data2_1_0[2].re @[Modules.scala 154:16]
    Switch_1.io.in[3].im <= data2_1_0[3].im @[Modules.scala 154:16]
    Switch_1.io.in[3].re <= data2_1_0[3].re @[Modules.scala 154:16]
    Switch_1.io.sel <= _T_176 @[Modules.scala 155:17]
    data1_2_0[0].im <= Switch_1.io.out[0].im @[FFT.scala 91:54]
    data1_2_0[0].re <= Switch_1.io.out[0].re @[FFT.scala 91:54]
    data1_2_0[1].im <= Switch_1.io.out[1].im @[FFT.scala 91:54]
    data1_2_0[1].re <= Switch_1.io.out[1].re @[FFT.scala 91:54]
    data1_2_0[2].im <= Switch_1.io.out[2].im @[FFT.scala 91:54]
    data1_2_0[2].re <= Switch_1.io.out[2].re @[FFT.scala 91:54]
    data1_2_0[3].im <= Switch_1.io.out[3].im @[FFT.scala 91:54]
    data1_2_0[3].re <= Switch_1.io.out[3].re @[FFT.scala 91:54]
    data1_0_0[0].im <= io.dIn[0].im @[FFT.scala 96:17]
    data1_0_0[0].re <= io.dIn[0].re @[FFT.scala 96:17]
    data1_0_0[1].im <= io.dIn[1].im @[FFT.scala 96:17]
    data1_0_0[1].re <= io.dIn[1].re @[FFT.scala 96:17]
    data1_0_0[2].im <= io.dIn[2].im @[FFT.scala 96:17]
    data1_0_0[2].re <= io.dIn[2].re @[FFT.scala 96:17]
    data1_0_0[3].im <= io.dIn[3].im @[FFT.scala 96:17]
    data1_0_0[3].re <= io.dIn[3].re @[FFT.scala 96:17]
    io.busy <= busy @[FFT.scala 98:11]
    reg _T_177 : UInt, clock @[FFT.scala 99:27]
    _T_177 <= cnt_0 @[FFT.scala 99:27]
    node _T_178 = eq(_T_177, UInt<5>("h01f")) @[FFT.scala 99:36]
    io.dout_valid <= _T_178 @[FFT.scala 99:17]
    reg _T_179 : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[4], clock @[FFT.scala 100:21]
    _T_179[0].im <= datao[0].im @[FFT.scala 100:21]
    _T_179[0].re <= datao[0].re @[FFT.scala 100:21]
    _T_179[1].im <= datao[1].im @[FFT.scala 100:21]
    _T_179[1].re <= datao[1].re @[FFT.scala 100:21]
    _T_179[2].im <= datao[2].im @[FFT.scala 100:21]
    _T_179[2].re <= datao[2].re @[FFT.scala 100:21]
    _T_179[3].im <= datao[3].im @[FFT.scala 100:21]
    _T_179[3].re <= datao[3].re @[FFT.scala 100:21]
    io.dOut[0].im <= _T_179[0].im @[FFT.scala 100:11]
    io.dOut[0].re <= _T_179[0].re @[FFT.scala 100:11]
    io.dOut[1].im <= _T_179[1].im @[FFT.scala 100:11]
    io.dOut[1].re <= _T_179[1].re @[FFT.scala 100:11]
    io.dOut[2].im <= _T_179[2].im @[FFT.scala 100:11]
    io.dOut[2].re <= _T_179[2].re @[FFT.scala 100:11]
    io.dOut[3].im <= _T_179[3].im @[FFT.scala 100:11]
    io.dOut[3].re <= _T_179[3].re @[FFT.scala 100:11]
    
